<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.lxb.blog.mapper.ArticleMapper">
    <resultMap id="BaseResultMap" type="cn.lxb.blog.model.Article">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="category_id" property="categoryId" jdbcType="INTEGER"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="tags" property="tags" jdbcType="VARCHAR"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="state" property="state" jdbcType="INTEGER"/>
        <result column="show_count" property="showCount" jdbcType="INTEGER"/>
        <result column="comments_num" property="commentsNum" jdbcType="INTEGER"/>
        <result column="blog_type" property="blogType" jdbcType="INTEGER"/>
        <result column="allow_comment" property="allowComment" jdbcType="TINYINT"/>
        <result column="allow_ping" property="allowPing" jdbcType="TINYINT"/>
        <result column="allow_feed" property="allowFeed" jdbcType="TINYINT"/>
        <result column="author_id" property="authorId" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="cn.lxb.blog.model.Article" extends="BaseResultMap">
        <result column="content" property="content" jdbcType="LONGVARCHAR"/>
    </resultMap>

    <sql id="baseSql">
        id,category_id,title,tags,content,description,state,show_count,comments_num,blog_type,allow_comment,allow_ping,allow_feed,author_id,create_time,update_time
    </sql>

    <!-- 根据文章ID查询文章 -->
    <select id="findArticleById" resultMap="BaseResultMap">
        SELECT <include refid="baseSql"/> FROM article WHERE id = #{articleId}
    </select>

    <!--获取上一篇文章信息  大于当前时间且最靠近当前时间的第一篇 -->
    <select id="getLastArticle" resultMap="BaseResultMap">
        SELECT id,title FROM article WHERE create_time &gt;
        (SELECT create_time FROM article WHERE id = #{articleId}) ORDER BY create_time ASC LIMIT 1
    </select>

    <!--获取下一篇文章信息 小于当前时间且最靠近当前时间的第一篇-->
    <select id="getNextArticle" resultMap="BaseResultMap">
        SELECT id,title FROM article WHERE create_time &lt;
        (SELECT create_time FROM article WHERE id = #{articleId}) ORDER BY create_time DESC LIMIT 1
    </select>

    <!--增加文章的阅读量-->
    <update id="addArticleCount">
        UPDATE article SET show_count = show_count + 1 WHERE id = #{articleId}
    </update>

</mapper>